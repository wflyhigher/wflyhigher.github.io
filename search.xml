<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>AcWing 95. 费解的开关</title>
      <link href="/2024/07/31/acwing-95-fei-jie-de-kai-guan/"/>
      <url>/2024/07/31/acwing-95-fei-jie-de-kai-guan/</url>
      
        <content type="html"><![CDATA[<p>👉<a href="https://www.acwing.com/problem/content/description/97/">原题链接</a></p><h3 id="题目描述-题目表述较长，为加深理解，请移步至原题链接">题目描述:   题目表述较长，为加深理解，请移步至原题链接~</h3><h3 id="解题思路：-该题的解法有多种，个人觉得y总讲的这一方法十分巧妙，看完讲解，一时间感jio到醍醐灌顶，确实NB。大致思路如下：先规定不去变更第一行灯的状态，则要想把第一行中的0变为1的话，只能通过改变第一行中的0所对应的第二行的位置的灯的状态来实现，第三行、第四行以此类推，即第i-1行该如何变化是由第i行的状态来决定的，但由于一共只有5行，因此最后一行无需再通过后面的行来做变更（因为它已经是最后一行了），最后只需通过判断最后一行是否全为1，进而确定当前状态是否合法。核心思想就是利用了递推。">解题思路： 该题的解法有多种，个人觉得y总讲的这一方法十分巧妙，看完讲解，一时间感jio到醍醐灌顶，确实NB。大致思路如下：先规定不去变更第一行灯的状态，则要想把第一行中的<strong>0</strong>变为<strong>1</strong>的话，只能通过改变第一行中的<strong>0</strong>所对应的第二行的位置的灯的状态来实现，第三行、第四行以此类推，即第i + 1行该如何变化是由第i行的状态来决定的，但由于一共只有5行，因此最后一行无需再通过后面的行来做变更（因为它已经是最后一行了），最后只需通过判断最后一行是否全为1，进而确定当前状态是否合法。核心思想就是利用了递推。</h3><h3 id="具体代码：">具体代码：</h3><pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;using namespace std;const int N = 10;int T;char g[N][N];int dx[5]= &#123;0, 1, 0, -1, 0&#125;, dy[5] = &#123;0, 0, -1, 0, 1&#125;;void turn(int x, int y) // 把 '1' 变为 '0', '0' 变为 '1'&#123;    for(int i = 0; i &lt; 5; i++)    &#123;        int a = x + dx[i], b = y + dy[i];        if(a &gt;= 0 &amp;&amp; a &lt; 5 &amp;&amp; b &gt;= 0 &amp;&amp; b &lt; 5)            g[a][b] ^= 1;    &#125;&#125;int fun()&#123;    int ans = 0x3f3f3f3f;    for(int k = 0; k &lt; 1 &lt;&lt; 5; k++) // 枚举第一行状态    &#123;        int res = 0;        char backup[N][N];         memcpy(backup, g, sizeof g); // 拷贝当前状态，方便后续恢复现场        for(int j = 0; j &lt; 5; j++)            if(k &gt;&gt; j &amp; 1) // 此处是为1时，就先按一下，目的是保证操作32次，确保能找到最小值            &#123;                res++;                turn(0, j);            &#125;                    for(int i = 0; i &lt; 4; i++) // 枚举0-3行，最后1行(即4行)不变，因为4行后没有其他行来改变4行的状态        &#123;            for(int j = 0; j &lt; 5; j++)                if(g[i][j] == '0')                &#123;                    turn(i + 1, j);                    res++;                &#125;        &#125;                bool flag = true;        for(int j = 0; j &lt; 5; j++) // 判断最后一行是否全为1，即状态是否合法            if(g[4][j] == '0')            &#123;                flag = false;                break;            &#125;                if(flag) ans = min(ans, res);                memcpy(g, backup, sizeof backup);  // 恢复原状态，便于后续枚举下一个状态    &#125;        if(ans &gt; 6) return -1;    return ans;&#125;int main()&#123;    cin &gt;&gt; T;    while(T--)    &#123;        for(int i = 0; i &lt; 5; i++)            cin &gt;&gt; g[i];        cout &lt;&lt; fun() &lt;&lt; &quot;\n&quot;;    &#125;        return 0;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> acwing coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《算法竞赛进阶指南》打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcWing 93. 递归实现组合型枚举</title>
      <link href="/2024/07/30/acwing-93-di-gui-shi-xian-zu-he-xing-mei-ju/"/>
      <url>/2024/07/30/acwing-93-di-gui-shi-xian-zu-he-xing-mei-ju/</url>
      
        <content type="html"><![CDATA[<p>👉<a href="https://www.acwing.com/problem/content/95/">原题链接</a></p><h3 id="题目描述-使用递归实现组合型枚举">题目描述:  使用递归实现组合型枚举</h3><h3 id="解题思路：-同时递归枚举每一层，以及当前层所选择的是第几位">解题思路： 同时递归枚举每一层，以及当前层所选择的是第几位</h3><h3 id="具体代码：">具体代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> path[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> start)</span> <span class="comment">// u为第几层， start为选的第几个数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u &gt; m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">            cout &lt;&lt; path[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = start; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            path[u] = i; <span class="comment">// 第u层取的数是i</span></span><br><span class="line">            <span class="built_in">dfs</span>(u + <span class="number">1</span>, i + <span class="number">1</span>);</span><br><span class="line">            path[u] = <span class="number">0</span>; <span class="comment">// 恢复现场</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> acwing coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《算法竞赛进阶指南》打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcWing 92. 递归实现指数型枚举</title>
      <link href="/2024/07/30/acwing-92-di-gui-shi-xian-zhi-shu-xing-mei-ju/"/>
      <url>/2024/07/30/acwing-92-di-gui-shi-xian-zhi-shu-xing-mei-ju/</url>
      
        <content type="html"><![CDATA[<p>👉<a href="https://www.acwing.com/problem/content/94/">原题链接</a></p><h3 id="题目描述-使用递归实现指数型枚举">题目描述:  使用递归实现指数型枚举</h3><h3 id="解题思路：-递归枚举每一位，每一位都有两种选择，选或不选，分别对应不同的枚举结果">解题思路： 递归枚举每一位，每一位都有两种选择，选或不选，分别对应不同的枚举结果</h3><h3 id="具体代码：">具体代码：</h3><h4 id="第一版：个人朴素思路写法">第一版：个人朴素思路写法</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num[N], n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">subset</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">x</span><span class="params">(n)</span></span>;</span><br><span class="line">    function&lt;<span class="type">void</span>(<span class="type">int</span>)&gt; subset = [&amp;](<span class="type">int</span> t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(t &gt;= n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; x.<span class="built_in">size</span>(); i++)</span><br><span class="line">                <span class="keyword">if</span>(x[i]) cout &lt;&lt; num[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            x[t] = <span class="number">0</span>, <span class="built_in">subset</span>(t + <span class="number">1</span>);</span><br><span class="line">            x[t] = <span class="number">1</span>, <span class="built_in">subset</span>(t + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">subset</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        num[i] = i + <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">subset</span>(n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第二版：-更优雅的写法">第二版： 更优雅的写法</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 优雅的写法</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u == n) <span class="comment">// 到了叶子节点</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(state &gt;&gt; i &amp; <span class="number">1</span>) <span class="comment">// 当前状态是否包含i</span></span><br><span class="line">               cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(u + <span class="number">1</span>, state); <span class="comment">// 不选当前这一位，保持原状态</span></span><br><span class="line">    <span class="built_in">dfs</span>(u + <span class="number">1</span>, state | <span class="number">1</span> &lt;&lt; u); <span class="comment">// 选当前这一位，通过或运算（取大）将当前状态的第u位置为1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> acwing coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《算法竞赛进阶指南》打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcWing 91. 最短Hamilton路径</title>
      <link href="/2024/07/30/acwing-91-zui-duan-hamilton-lu-jing/"/>
      <url>/2024/07/30/acwing-91-zui-duan-hamilton-lu-jing/</url>
      
        <content type="html"><![CDATA[<p>👉<a href="https://www.acwing.com/problem/content/93/">原题链接</a></p><h3 id="解题思路：-状压DP">解题思路： 状压DP</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">20</span>, M = <span class="number">1</span> &lt;&lt; <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[M][N], a[N][N]; <span class="comment">// f[i][j] 表示到达j经过的状态是i的方案的路径长度</span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">memset</span>(f, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> f);</span><br><span class="line">    f[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>; <span class="comment">// 初始状态下，当前只走过0这个点，对应的状态为1（走过0），此时路径长度为0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1</span> &lt;&lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            <span class="keyword">if</span>(i &gt;&gt; j &amp; <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k++)</span><br><span class="line">                    <span class="keyword">if</span>(i - (<span class="number">1</span> &lt;&lt; j) &gt;&gt; k &amp; <span class="number">1</span>)</span><br><span class="line">                        f[i][j] = <span class="built_in">min</span>(f[i][j], f[i - (<span class="number">1</span> &lt;&lt; j)][k] + a[k][j]);</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; f[(<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span>][n - <span class="number">1</span>] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> acwing coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《算法竞赛进阶指南》打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcWing 94. 递归实现排列型枚举</title>
      <link href="/2024/07/29/test/"/>
      <url>/2024/07/29/test/</url>
      
        <content type="html"><![CDATA[<p>👉<a href="https://www.acwing.com/problem/content/96/">原题链接</a></p><h3 id="题目描述：使用递归实现排列型枚举">题目描述：使用递归实现排列型枚举</h3><h3 id="解题思路：递归枚举每一位-，看当前这一位能填那些数，并对所填的数进行标记">解题思路：递归枚举每一位 ，看当前这一位能填那些数，并对所填的数进行标记</h3><h3 id="具体代码">具体代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> path[N]; <span class="comment">// 记录每一位填的数</span></span><br><span class="line"><span class="type">bool</span> st[N]; <span class="comment">// st[i]标记i是否用过</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span> <span class="comment">// u表示当前枚举的是哪一位</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u &gt; n) <span class="comment">// 找到一种排列，输出结果</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            cout &lt;&lt; path[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!st[i])</span><br><span class="line">            &#123;</span><br><span class="line">                path[u] = i;</span><br><span class="line">                st[i] = <span class="literal">true</span>;</span><br><span class="line">                <span class="built_in">dfs</span>(u + <span class="number">1</span>); <span class="comment">// 填下一位</span></span><br><span class="line">                path[u] = <span class="number">0</span>; <span class="comment">// 恢复现场</span></span><br><span class="line">                st[i] = <span class="literal">false</span>; <span class="comment">// 恢复现场</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> acwing coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《算法竞赛进阶指南》打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站小记~</title>
      <link href="/2024/07/28/di-yi-pian-hexo-blog-wen-zhang/"/>
      <url>/2024/07/28/di-yi-pian-hexo-blog-wen-zhang/</url>
      
        <content type="html"><![CDATA[<h1>建站仪式，正式开始！👋 ✨ 💫</h1><h2 id="👉新开博记👈">👉新开博记👈</h2><p>余今晨起，天朗气清，惠风和畅，乃择吉时，创吾之博焉。昔人有言：“书非借不能读也。”余谓博非建不能广也。是以志士不饮盗泉之水，廉者不受嗟来之食，况乎立言著述，传道解惑，岂可无一隅之地以陈词达意哉？</p><p>于是命仆役扫除尘埃，整案牍，置笔墨，屏息凝神，静思良久。既而构思既定，遂开新页，名之曰“某某之博”。所论者，或天文地理，或诗书礼乐，或世事人情，皆随心之所向，笔之所至。</p><p>初建之时，犹若空谷幽兰，寂寂无人问津。然余不以人寡而废言，不以地偏而辍笔。盖深知千里之行始于足下，积土成山，风雨兴焉；积水成渊，蛟龙生焉。故虽始微末，亦当勤勉不懈。</p><p>复念及古人云：“独学而无友，则孤陋而寡闻。”故期于四方君子，共聚斯地，各抒己见，相与切磋琢磨，以广见识，增进学问。且冀后之览者，有所得而益其智，有所感而激其志。</p><p>是为记。</p><h2 id="✨站长发表讲话：">✨站长发表讲话：</h2><p>先生们、女士们，经过几天的努力奋斗，本小站现已经初具雏形，可喜可贺！（鼓掌）。相信大家不禁会好奇一问，站长你为啥会突发奇想要整个个人博客捏，哈哈！其实想来也并非是突发奇想，站长之前就一直有想弄个个人博客的想法，只是一直没啥空，近期站长我在网上查资料时，时常点进各位大佬的个人博客，看到了很多很酷炫、很nice的博客，建立个人博客的想法愈发强烈，刚好站长我近期腾出了一些空闲时间，于是说干就干！起初呢，是想着整个服务器，直接在服务器上部署自己的博客，但查看了几篇教程后，觉得有那么些许的小繁杂，加上租个服务器多多少少有点小贵，于是乎便在几番深思熟虑后，选择采用 Hexo + Github Pages 的方式来组织本站。采取这种方式，主要还是考虑到操作起来比较简便，同时也利于后续的维护。博客不仅可以用来发表一些自己的所思所想、记录生活中的点点滴滴，同时还可以锻炼锻炼自己的编辑能力、提升自己，一篇好的博客也能为其他有需要的人提供一些帮助，何乐而不为呢？当然，建设初期，本站的内容还有待丰富，不过，不必担心！相信在站长的不懈努力下，小站的内容会愈加充实、丰富，就让我们拭目以待~~</p><h2 id="💫学习编程从输出“Hello-World！”开始，建站也是-💡">💫学习编程从输出“Hello World！”开始，建站也是 💡</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello World!&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>l</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> introduction </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/07/28/hello-world/"/>
      <url>/2024/07/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
